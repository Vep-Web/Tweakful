{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gulp-builder/./src/js/_components.js","webpack://gulp-builder/./src/js/_functions.js","webpack://gulp-builder/./src/js/_vars.js","webpack://gulp-builder/./src/js/_vendor.js","webpack://gulp-builder/./src/js/components/burger.js","webpack://gulp-builder/./src/js/components/castom_select.js","webpack://gulp-builder/./src/js/components/swiper_main.js","webpack://gulp-builder/./src/js/functions/mobile-check.js","webpack://gulp-builder/./src/js/vendor/focus-visible.js","webpack://gulp-builder/webpack/bootstrap","webpack://gulp-builder/webpack/runtime/compat get default export","webpack://gulp-builder/webpack/runtime/define property getters","webpack://gulp-builder/webpack/runtime/hasOwnProperty shorthand","webpack://gulp-builder/webpack/runtime/make namespace object","webpack://gulp-builder/./src/js/main.js"],"sourcesContent":["import './components/burger.js';\nimport './components/swiper_main.js';\nimport './components/castom_select.js';\n\n\nconsole.log('components');\n","// Данный файл - лишь собрание подключений готовых компонентов.\n// Рекомендуется создавать отдельный файл в папке components и подключать все там\n\n// Определение операционной системы на мобильных\nimport { mobileCheck } from \"./functions/mobile-check\";\nconsole.log(mobileCheck())\n\n// Определение ширины экрана\n// import { isMobile, isTablet, isDesktop } from './functions/check-viewport';\n// if (isDesktop()) {\n//   console.log('...')\n// }\n\n// Троттлинг функции (для ресайза, ввода в инпут, скролла и т.д.)\n// import { throttle } from './functions/throttle';\n// let yourFunc = () => { console.log('throttle') };\n// let func = throttle(yourFunc);\n// window.addEventListener('resize', func);\n\n// Фикс фулскрин-блоков\n// import './functions/fix-fullheight';\n\n// Реализация бургер-меню\n// import { burger } from './functions/burger';\n\n// Реализация остановки скролла (не забудьте вызвать функцию)\n// import { disableScroll } from './functions/disable-scroll';\n\n// Реализация включения скролла (не забудьте вызвать функцию)\n// import { enableScroll } from './functions/enable-scroll';\n\n// Реализация модального окна\n// import GraphModal from 'graph-modal';\n// const modal = new GraphModal();\n\n// Реализация табов\n// import GraphTabs from 'graph-tabs';\n// const tabs = new GraphTabs('tab');\n\n// Получение высоты шапки сайта (не забудьте вызвать функцию)\n// import { getHeaderHeight } from './functions/header-height';\n\n// Подключение плагина кастом-скролла\n// import 'simplebar';\n\n// Подключение плагина для позиционирования тултипов\n// import { createPopper, right} from '@popperjs/core';\n// createPopper(el, tooltip, {\n//   placement: 'right'\n// });\n\n// Подключение свайпера\n// import Swiper, { Navigation, Pagination } from 'swiper';\n// Swiper.use([Navigation, Pagination]);\n// const swiper = new Swiper(el, {\n//   slidesPerView: 'auto',\n// });\n\n// Подключение анимаций по скроллу\n// import AOS from 'aos';\n// AOS.init();\n\n// Подключение параллакса блоков при скролле\n// import Rellax from 'rellax';\n// const rellax = new Rellax('.rellax');\n\n// Подключение плавной прокрутки к якорям\n// import SmoothScroll from 'smooth-scroll';\n// const scroll = new SmoothScroll('a[href*=\"#\"]');\n\n// Подключение событий свайпа на мобильных\n// import 'swiped-events';\n// document.addEventListener('swiped', function(e) {\n//   console.log(e.target);\n//   console.log(e.detail);\n//   console.log(e.detail.dir);\n// });\n\n// import { validateForms } from './functions/validate-forms';\n// const rules1 = [...];\n\n// const afterForm = () => {\n//   console.log('Произошла отправка, тут можно писать любые действия');\n// };\n\n// validateForms('.form-1', rules1, afterForm);\n","export default {\n  windowEl: window,\n  documentEl: document,\n  htmlEl: document.documentElement,\n  bodyEl: document.body,\n}\n","import './vendor/focus-visible.js';\n","// document.addEventListener('DOMContentLoaded', function() {\n//   document.getElementById('burger').addEventListener('click', function() {\n//     document.querySelector('header').classList.toggle('open')\n//   })\n// })\n\n\nburger = document.getElementById('burger')\nheader = document.querySelector('header')\nbody = document.body\n\nburger.addEventListener('click', function() {\n  header.classList.toggle('open')\n  body.classList.toggle('dis-scroll')\n})\n","let select = function () {\n  let selectHeader = document.querySelectorAll('.select__header')\n  let selectItem = document.querySelectorAll('.select__item')\n\n  selectHeader.forEach(item => {\n    item.addEventListener('click', selectToggle)\n  })\n\n  selectItem.forEach(item => {\n    item.addEventListener('click', selectChoose)\n  })\n\n  function selectToggle() {\n    this.parentElement.classList.toggle('select--active')\n  }\n\n  function selectChoose() {\n    let text = this.innerText,\n        select = this.closest('.select'),\n        currentText = select.querySelector('.select__current')\n    currentText.innerText = text\n    select.classList.remove('select--active')\n  }\n}\n\n\nselect()\n\n\n","const swiperMain = new Swiper(\".story__swiper\", {\n  spaceBetween: 30,\n  pagination: {\n    el: \".story__swiper-pagination\",\n    clickable: true,\n  },\n});\n\n\n\nconst swiperManual = new Swiper('.manual__swiper', {\n  freeMode: true,\n  loop: true,\n  spaceBetween: 30,\n  slidesPerView: 3,\n\n  // Navigation arrows\n  navigation: {\n    nextEl: '.manual__swiper-button-next',\n    prevEl: '.manual__swiper-button-prev',\n  },\n\n  breakpoints: {\n    // when window width is >= 320px\n    320: {\n      slidesPerView: 1,\n      spaceBetween: 10\n    },\n\n    565: {\n      slidesPerView: 3,\n      spaceBetween: 30\n    }\n  }\n});\n","import vars from '../_vars';\n\nexport const mobileCheck = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  if (/android/i.test(userAgent)) {\n    vars.htmlEl.classList.add('page--android');\n    return \"Android\";\n  }\n\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    vars.htmlEl.classList.add('page--ios');\n    return \"iOS\";\n  }\n\n  return \"unknown\";\n};\n","// /**\n//  * Applies the :focus-visible polyfill at the given scope.\n//  * A scope in this case is either the top-level Document or a Shadow Root.\n//  *\n//  * @param {(Document|ShadowRoot)} scope\n//  * @see https://github.com/WICG/focus-visible\n//  */\n// function applyFocusVisiblePolyfill(scope) {\n//   var hadKeyboardEvent = true;\n//   var hadFocusVisibleRecently = false;\n//   var hadFocusVisibleRecentlyTimeout = null;\n\n//   var inputTypesAllowlist = {\n//     text: true,\n//     search: true,\n//     url: true,\n//     tel: true,\n//     email: true,\n//     password: true,\n//     number: true,\n//     date: true,\n//     month: true,\n//     week: true,\n//     time: true,\n//     datetime: true,\n//     'datetime-local': true\n//   };\n\n//   /**\n//    * Helper function for legacy browsers and iframes which sometimes focus\n//    * elements like document, body, and non-interactive SVG.\n//    * @param {Element} el\n//    */\n//   function isValidFocusTarget(el) {\n//     if (\n//       el &&\n//       el !== document &&\n//       el.nodeName !== 'HTML' &&\n//       el.nodeName !== 'BODY' &&\n//       'classList' in el &&\n//       'contains' in el.classList\n//     ) {\n//       return true;\n//     }\n//     return false;\n//   }\n\n//   /**\n//    * Computes whether the given element should automatically trigger the\n//    * `focus-visible` class being added, i.e. whether it should always match\n//    * `:focus-visible` when focused.\n//    * @param {Element} el\n//    * @return {boolean}\n//    */\n//   function focusTriggersKeyboardModality(el) {\n//     var type = el.type;\n//     var tagName = el.tagName;\n\n//     if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {\n//       return true;\n//     }\n\n//     if (tagName === 'TEXTAREA' && !el.readOnly) {\n//       return true;\n//     }\n\n//     if (el.isContentEditable) {\n//       return true;\n//     }\n\n//     return false;\n//   }\n\n//   /**\n//    * Add the `focus-visible` class to the given element if it was not added by\n//    * the author.\n//    * @param {Element} el\n//    */\n//   function addFocusVisibleClass(el) {\n//     if (el.classList.contains('focus-visible')) {\n//       return;\n//     }\n//     el.classList.add('focus-visible');\n//     el.setAttribute('data-focus-visible-added', '');\n//   }\n\n//   /**\n//    * Remove the `focus-visible` class from the given element if it was not\n//    * originally added by the author.\n//    * @param {Element} el\n//    */\n//   function removeFocusVisibleClass(el) {\n//     if (!el.hasAttribute('data-focus-visible-added')) {\n//       return;\n//     }\n//     el.classList.remove('focus-visible');\n//     el.removeAttribute('data-focus-visible-added');\n//   }\n\n//   /**\n//    * If the most recent user interaction was via the keyboard;\n//    * and the key press did not include a meta, alt/option, or control key;\n//    * then the modality is keyboard. Otherwise, the modality is not keyboard.\n//    * Apply `focus-visible` to any current active element and keep track\n//    * of our keyboard modality state with `hadKeyboardEvent`.\n//    * @param {KeyboardEvent} e\n//    */\n//   function onKeyDown(e) {\n//     if (e.metaKey || e.altKey || e.ctrlKey) {\n//       return;\n//     }\n\n//     if (isValidFocusTarget(scope.activeElement)) {\n//       addFocusVisibleClass(scope.activeElement);\n//     }\n\n//     hadKeyboardEvent = true;\n//   }\n\n//   /**\n//    * If at any point a user clicks with a pointing device, ensure that we change\n//    * the modality away from keyboard.\n//    * This avoids the situation where a user presses a key on an already focused\n//    * element, and then clicks on a different element, focusing it with a\n//    * pointing device, while we still think we're in keyboard modality.\n//    * @param {Event} e\n//    */\n//   function onPointerDown(e) {\n//     hadKeyboardEvent = false;\n//   }\n\n//   /**\n//    * On `focus`, add the `focus-visible` class to the target if:\n//    * - the target received focus as a result of keyboard navigation, or\n//    * - the event target is an element that will likely require interaction\n//    *   via the keyboard (e.g. a text box)\n//    * @param {Event} e\n//    */\n//   function onFocus(e) {\n//     // Prevent IE from focusing the document or HTML element.\n//     if (!isValidFocusTarget(e.target)) {\n//       return;\n//     }\n\n//     if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n//       addFocusVisibleClass(e.target);\n//     }\n//   }\n\n//   /**\n//    * On `blur`, remove the `focus-visible` class from the target.\n//    * @param {Event} e\n//    */\n//   function onBlur(e) {\n//     if (!isValidFocusTarget(e.target)) {\n//       return;\n//     }\n\n//     if (\n//       e.target.classList.contains('focus-visible') ||\n//       e.target.hasAttribute('data-focus-visible-added')\n//     ) {\n//       // To detect a tab/window switch, we look for a blur event followed\n//       // rapidly by a visibility change.\n//       // If we don't see a visibility change within 100ms, it's probably a\n//       // regular focus change.\n//       hadFocusVisibleRecently = true;\n//       window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n//       hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {\n//         hadFocusVisibleRecently = false;\n//       }, 100);\n//       removeFocusVisibleClass(e.target);\n//     }\n//   }\n\n//   /**\n//    * If the user changes tabs, keep track of whether or not the previously\n//    * focused element had .focus-visible.\n//    * @param {Event} e\n//    */\n//   function onVisibilityChange(e) {\n//     if (document.visibilityState === 'hidden') {\n//       // If the tab becomes active again, the browser will handle calling focus\n//       // on the element (Safari actually calls it twice).\n//       // If this tab change caused a blur on an element with focus-visible,\n//       // re-apply the class when the user switches back to the tab.\n//       if (hadFocusVisibleRecently) {\n//         hadKeyboardEvent = true;\n//       }\n//       addInitialPointerMoveListeners();\n//     }\n//   }\n\n//   /**\n//    * Add a group of listeners to detect usage of any pointing devices.\n//    * These listeners will be added when the polyfill first loads, and anytime\n//    * the window is blurred, so that they are active when the window regains\n//    * focus.\n//    */\n//   function addInitialPointerMoveListeners() {\n//     document.addEventListener('mousemove', onInitialPointerMove);\n//     document.addEventListener('mousedown', onInitialPointerMove);\n//     document.addEventListener('mouseup', onInitialPointerMove);\n//     document.addEventListener('pointermove', onInitialPointerMove);\n//     document.addEventListener('pointerdown', onInitialPointerMove);\n//     document.addEventListener('pointerup', onInitialPointerMove);\n//     document.addEventListener('touchmove', onInitialPointerMove);\n//     document.addEventListener('touchstart', onInitialPointerMove);\n//     document.addEventListener('touchend', onInitialPointerMove);\n//   }\n\n//   function removeInitialPointerMoveListeners() {\n//     document.removeEventListener('mousemove', onInitialPointerMove);\n//     document.removeEventListener('mousedown', onInitialPointerMove);\n//     document.removeEventListener('mouseup', onInitialPointerMove);\n//     document.removeEventListener('pointermove', onInitialPointerMove);\n//     document.removeEventListener('pointerdown', onInitialPointerMove);\n//     document.removeEventListener('pointerup', onInitialPointerMove);\n//     document.removeEventListener('touchmove', onInitialPointerMove);\n//     document.removeEventListener('touchstart', onInitialPointerMove);\n//     document.removeEventListener('touchend', onInitialPointerMove);\n//   }\n\n//   /**\n//    * When the polfyill first loads, assume the user is in keyboard modality.\n//    * If any event is received from a pointing device (e.g. mouse, pointer,\n//    * touch), turn off keyboard modality.\n//    * This accounts for situations where focus enters the page from the URL bar.\n//    * @param {Event} e\n//    */\n//   function onInitialPointerMove(e) {\n//     // Work around a Safari quirk that fires a mousemove on <html> whenever the\n//     // window blurs, even if you're tabbing out of the page. ¯\\_(ツ)_/¯\n//     if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n//       return;\n//     }\n\n//     hadKeyboardEvent = false;\n//     removeInitialPointerMoveListeners();\n//   }\n\n//   // For some kinds of state, we are interested in changes at the global scope\n//   // only. For example, global pointer input, global key presses and global\n//   // visibility change should affect the state at every scope:\n//   document.addEventListener('keydown', onKeyDown, true);\n//   document.addEventListener('mousedown', onPointerDown, true);\n//   document.addEventListener('pointerdown', onPointerDown, true);\n//   document.addEventListener('touchstart', onPointerDown, true);\n//   document.addEventListener('visibilitychange', onVisibilityChange, true);\n\n//   addInitialPointerMoveListeners();\n\n//   // For focus and blur, we specifically care about state changes in the local\n//   // scope. This is because focus / blur events that originate from within a\n//   // shadow root are not re-dispatched from the host element if it was already\n//   // the active element in its own scope:\n//   scope.addEventListener('focus', onFocus, true);\n//   scope.addEventListener('blur', onBlur, true);\n\n//   // We detect that a node is a ShadowRoot by ensuring that it is a\n//   // DocumentFragment and also has a host property. This check covers native\n//   // implementation and polyfill implementation transparently. If we only cared\n//   // about the native implementation, we could just check if the scope was\n//   // an instance of a ShadowRoot.\n//   if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n//     // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n//     // have a root element to add a class to. So, we add this attribute to the\n//     // host element instead:\n//     scope.host.setAttribute('data-js-focus-visible', '');\n//   } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n//     document.documentElement.classList.add('js-focus-visible');\n//     document.documentElement.setAttribute('data-js-focus-visible', '');\n//   }\n// }\n\n// // It is important to wrap all references to global window and document in\n// // these checks to support server-side rendering use cases\n// // @see https://github.com/WICG/focus-visible/issues/199\n// if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n//   // Make the polyfill helper globally available. This can be used as a signal\n//   // to interested libraries that wish to coordinate with the polyfill for e.g.,\n//   // applying the polyfill to a shadow root:\n//   window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n//   // Notify interested libraries of the polyfill's presence, in case the\n//   // polyfill was loaded lazily:\n//   var event;\n\n//   try {\n//     event = new CustomEvent('focus-visible-polyfill-ready');\n//   } catch (error) {\n//     // IE11 does not support using CustomEvent as a constructor directly:\n//     event = document.createEvent('CustomEvent');\n//     event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n//   }\n\n//   window.dispatchEvent(event);\n// }\n\n// if (typeof document !== 'undefined') {\n//   // Apply the polyfill to the global document, so that no JavaScript\n//   // coordination is required to use the polyfill in the top-level document:\n//   applyFocusVisiblePolyfill(document);\n// }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './_vendor';\nimport vars from './_vars';\nimport './_functions';\nimport './_components';\n"],"names":["console","log","mobileCheck","windowEl","window","documentEl","document","htmlEl","documentElement","bodyEl","body","burger","getElementById","header","querySelector","addEventListener","classList","toggle","select","selectHeader","querySelectorAll","selectItem","forEach","item","selectToggle","selectChoose","parentElement","text","innerText","closest","currentText","remove","swiperMain","Swiper","spaceBetween","pagination","el","clickable","swiperManual","freeMode","loop","slidesPerView","navigation","nextEl","prevEl","breakpoints","vars","userAgent","navigator","vendor","opera","test","add","MSStream"],"sourceRoot":""}